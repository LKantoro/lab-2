---
title: "Lab 2"
subtitle: "Advanced Data Visualization"
author: "Lucas Kantorowski"
editor: source
embed-resources: true
execute: 
  warning: false
---


```{r}
library(tidyverse)
library(dplyr)
library(leaflet)
library(dplyr)
library(sf)
library(plotly)
library(readxl)
```

# Instructions

**Create a Quarto file for ALL Lab 2 (no separate files for Parts 1 and 2).**

- Make sure your final file is carefully formatted, so that each analysis is
clear and concise.
- Be sure your knitted `.html` file shows **all** your source code, including
any function definitions. 

# Part One: Identifying Bad Visualizations

If you happen to be bored and looking for a sensible chuckle, you should check
out these [Bad Visualisations](https://badvisualisations.tumblr.com/). Looking through these is also a good exercise in cataloging what makes a visualization
good or bad. 

## Dissecting a Bad Visualization

Below is an example of a less-than-ideal visualization from the collection
linked above. It comes to us from data provided for the [Wellcome Global Monitor 2018 report](https://wellcome.ac.uk/reports/wellcome-global-monitor/2018) by the 
Gallup World Poll:

![](image/bad-wellcome-graph.jpg)

1. While there are certainly issues with this image, do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?

- The graph is showing the distribution of vaccine trust across countries of the world. The countries are grouped into global region, such as 'Americas' and 'Asia'. The author is trying to show how vaccine trust differs between regions of the world, and within region of the world.


2. List the variables that appear to be displayed in this visualization. 
*Hint: Variables refer to columns in the data.*

- There are four variables in this visualization. One is the percent of people in each country who trust vaccines. The y-axis variable is based directly off the order of vaccine trust, on the x-axis. The other two variables are country, and global region. 

3. Now that you're versed in the grammar of graphics (e.g., `ggplot`), list the *aesthetics* used and which *variables* are mapped to each.

- The aesthetics used include x, y, and color. 

- Vaccine trust percentage is mapped to x, ranking within each global region is mapped to y.

- The global region is mapped to the color aesthetic within geom_point.

- The country variable is mapped to the label aesthetic.

4. What type of graph would you call this? Meaning, what `geom` would you use
to produce this plot?

- geom_dotplot()

5. Provide at least four problems or changes that would improve this graph. 
*Please format your changes as bullet points!*

- The y-axis is not useful as it is directly based off the x-axis.
- Even though the y-axis is not useful, there is no indication of what it represents.
- The x-axis does not start at 0, which messes up the scale.
- The legend at the bottom does not provide any additional information that is not already in the graph.


## Improving the Bad Visualization

The data for the Wellcome Global Monitor 2018 report can be downloaded at the following site: [https://wellcome.ac.uk/reports/wellcome-global-monitor/2018](https://wellcome.org/sites/default/files/wgm2018-dataset-crosstabs-all-countries.xlsx)

<!-- at the "Dataset and crosstabs for all countries" link on the right side of the page-->

There are two worksheets in the downloaded dataset file. You may need to read
them in separately, but you may also just use one if it suffices.

```{r}
#| label: read-in-wellcome-data

wgm2018_crosstab = read_excel(here::here("wgm2018-dataset-crosstabs-all-countries.xlsx"), sheet = 1)

wgm2018_full = read_excel(here::here("wgm2018-dataset-crosstabs-all-countries.xlsx"), sheet = 2)

wgm2018_dict = read_excel(here::here("wgm2018-dataset-crosstabs-all-countries.xlsx"), sheet = 3)
```

6. Improve the visualization above by either re-creating it with the issues you
identified fixed OR by creating a new visualization that you believe tells the
same story better.

```{r}
#| label: new-and-improved-visualization

#creating string based on list provided
countriesstringsplit = str_split(wgm2018_dict[1,3], ',')

#changing the vector into a data frame and eliminating the last row, which was blank
countriesdf = as.data.frame(countriesstringsplit, col.names = c("country")) %>%
  filter(!row_number() %in% c(145))


#creating a two column data frame about the '=' and changing the code to numeric
countriesdf = countriesdf %>% 
  separate_wider_delim(country, delim = "=", names = c("country_code", "country_name")) %>% 
  mutate(country_code = as.numeric(country_code))
```

```{r}
#merging to make full dataset have country names
wgm2018_full_new = left_join(wgm2018_full, countriesdf, by = join_by(WP5 == country_code))
```


```{r}
#similar process for splitting regions, as was done above for countries

regionsstringsplit = str_split(wgm2018_dict[57,3], ',')

regionsdf = as.data.frame(regionsstringsplit, col.names = c("region")) %>%
  filter(!row_number() %in% c(20))

regionsdf = regionsdf %>% separate_wider_delim(region, delim = "=", names = c("region_code", "region_name")) %>% 
  mutate(region_code = as.numeric(region_code))


#creating a new column for world region to be used to split the graph

regionsdf['map_region'] = case_when(
          regionsdf[['region_code']] %in% c(9,10,11,12, 18) ~ 'Asia and Australia',
          regionsdf[['region_code']] %in% c(1,2,4,5) ~ 'Sub-Saharan Africa',
          regionsdf[['region_code']] %in% c(6,7,8) ~ 'Americas',
          regionsdf[['region_code']] %in% c(15,16,17) ~ 'Europe',
          regionsdf[['region_code']] %in% c(3,13) ~ 'Middle East and North Africa',
          regionsdf[['region_code']] == 14 ~ 'Former Soviet Union',
          regionsdf[['region_code']] == 0 ~ 'Not Assigned')
```

```{r}
#merging to add region names to big data frame
wgm2018_full_new2 = left_join(wgm2018_full_new, regionsdf, by = join_by(Regions_Report == region_code))

#removing duplicates
countries_and_regions = distinct(wgm2018_full_new2[61:63])
```

```{r}
#finding percentage who think vaccines are safe based on answering '1' to Q25

country_counts = wgm2018_full_new2 %>% group_by(country_name) %>% 
  summarise(total_count = n()) %>%
  rename('total_surveyed' = total_count)

vaccine_safe_counts = wgm2018_full_new2 %>% 
  group_by(country_name, Q25) %>% 
  summarise(total_count = n()) %>%
  rename('total_safe' = total_count) %>% 
  filter(Q25 == '1')

```

```{r}
#joining counts
graph1_tibble = left_join(country_counts, vaccine_safe_counts, by = join_by(country_name == country_name))

#dividing people who think safe by people surveyed to find percentage
graph1_tibble$value = graph1_tibble$total_safe/graph1_tibble$total_surveyed

graph1_tibble2 = left_join(graph1_tibble, countries_and_regions, by = join_by(country_name == country_name)) %>% 
  filter(map_region != "Not Assigned")
```


```{r}
graph1_tibble2 %>% ggplot(aes(x = value, fill = map_region, color = map_region)) +
  geom_dotplot(binwidth = .01) + 
  facet_grid(rows = vars(map_region), axis.labels = "margins") +
  theme(panel.grid.minor = element_blank(), panel.grid.major.y = element_blank(), 
  plot.title.position = "plot", axis.text.y = element_blank(), axis.ticks.y = element_blank()) + 
  theme(strip.text = element_blank(), legend.position = "none") +
  labs(x = "", 
       y = "",
       fill = "",
       title = "Percent of People Who Believe Vaccines Are Effective By Country and Region") +
  scale_x_continuous(labels = scales::percent) +
  geom_text(aes(x = .5, y = .8, label = map_region))
```


# Part Two: Broad Visualization Improvement

The full Wellcome Global Monitor 2018 report can be found here: [https://wellcome.ac.uk/sites/default/files/wellcome-global-monitor-2018.pdf](https://wellcome.ac.uk/sites/default/files/wellcome-global-monitor-2018.pdf). 
Surprisingly, the visualization above does not appear in the report despite the
citation in the bottom corner of the image!

## Second Data Visualization Improvement

**For this second plot, you must select a plot that uses maps so you can demonstrate your proficiency with the `leaflet` package!**

7. Select a data visualization in the report that you think could be improved. 
Be sure to cite both the page number and figure title. Do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?

- Page 55, Chart 3.3: "Map of countries according to levels of Trust in Scientists"

- The graph is demonstrating how trust in scientists varies throughout the world. Darker shades of green represent higher trust in scientists.

- The authors want the reader to discern what causes the population of certain countries to have higher trust in scientists than others.


8. List the variables that appear to be displayed in this visualization.

- There are 2 variables used in this visualization. One variable is country. The other variable is a score on a scale of 1-4, answering the question "How much do you trusts scientists in your country?". The mean score of each country is taken and determines the color of each country on the map.

9. Now that you're versed in the grammar of graphics (ggplot), list the
aesthetics used and which variables are specified for each.

- addPolygons is used to extract the geometries of countries. It's aesthetics have the country color and label based on percentage of people who have high trust in scientists.

10. What type of graph would you call this?

- This is a chloropleth map

11. List all of the problems or things you would improve about this graph.  

- The variation in color is not large enough.
- The scale used to measure distrust is not clear based on the graph.
- The subtitle does not clarify what the scale means.

12. Improve the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.

```{r}
#| label: second-improved-visualization

#finding country geometries: https://r-graph-gallery.com/183-choropleth-map-with-leaflet.html

download.file(
  "https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/world_shape_file.zip",
  destfile = "DATA/world_shape_file.zip"
)

system("unzip DATA/world_shape_file.zip")

world_sf <- read_sf(paste0(
  getwd(), "/DATA/world_shape_file/",
  "TM_WORLD_BORDERS_SIMPL-0.3.shp"
))
```


```{r}
#joining country geometries and overall data frame together
graph2_df = right_join(graph1_tibble2, world_sf, by = join_by(country_name == NAME))

#using the same value as used in the above dotplot
graph2_df = graph2_df %>% mutate(value = round(value, 2) * 100)

```


```{r}
#getting the count of high trust in scientists by country
trust_scientists_counts = wgm2018_full_new2 %>% 
  group_by(country_name, Q11C) %>% summarise(total_count = n()) %>%
  rename('total_trust' = total_count) %>% filter(Q11C == '1')
```

```{r}
#joining with count of people surveyed
graph2_tibble = left_join(country_counts, trust_scientists_counts, by = join_by(country_name == country_name))

#calculating percent of people who have high trust in scientists
graph2_tibble$trust_value = round(graph2_tibble$total_trust/graph1_tibble$total_surveyed * 100, 2)

graph2_df2 = full_join(graph2_df, graph2_tibble, by = join_by(country_name == country_name))
```


```{r}
#creating bins for coloring
bins = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)

pal = colorBin("RdYlGn", domain = graph2_df2$trust_value, bins = bins)

#converting data.frame to sf for graphing using leaflet: https://r-spatial.github.io/sf/reference/sf.html
graph2_df2 = st_sf(graph2_df2)
```

```{r}
leaflet(graph2_df2) %>% addTiles() %>% 
  addPolygons(fillColor = ~pal(trust_value), weight = .2,  opacity = 1, color = 'black',
              popup = ~country_name, label = ~trust_value, stroke = FALSE) %>%
  addLegend(pal = pal, values = ~trust_value, position = "bottomleft", title = "", 
            labFormat = labelFormat(suffix = "%")) %>%
  addControl(c("People Who Have High Trust In Scientists"), position = "topleft")
```



## Third Data Visualization Improvement

**For this third plot, you must use one of the other `ggplot2` extension packages mentioned this week (e.g., `gganimate`, `plotly`, `patchwork`, `cowplot`).**
 
13. Select a data visualization in the report that you think could be improved. 
Be sure to cite both the page number and figure title. Do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?

- Page 112, Q25,26, Chart 5.4: "Scatterplot exploring people’s perceptions of vaccine safety and vaccine effectiveness"

- The graph is telling us that countries with higher distrust of vaccines tend to also believe that they are not effective. The authors included a line of best fit to demonstrate the positive trend between lack of vaccine trust and lack of a belief in vaccine effectiveness.

14. List the variables that appear to be displayed in this visualization.

- The variables used in this visualization are country, the percentage of people in each country who believe vaccines are not safe, and the percentage of people in each country who think vaccines are not effective.

15. Now that you're versed in the grammar of graphics (ggplot), list the
aesthetics used and which variables are specified for each.

- plotly is used. The graph aesthetics are percentage who think vaccines are safe on the x-axis, and percentage who think vaccines are safe on the y-axis. The color aesthetic is the global region of the country, with each individual country having a hover label.


16. What type of graph would you call this?

- This is a scatter plot.

17. List all of the problems or things you would improve about this graph.  

- The legend is unnecessary
- The y-axis label makes viewers tilt their head
- Colors would provide additional information, such as (population or region)
- x-axis title is in the bottom right
- The type of graph is in the title of the graph, which is redundant
- Gridlines are too frequent

18. Improve the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.

```{r}
#| label: third-improved-visualization

#finding the count of people who think vaccines are effective
vaccine_effective_counts = wgm2018_full_new2 %>% group_by(country_name, map_region, Q26) %>% 
  summarise(total_count = n()) %>% rename('total_effective'= total_count) %>% 
  filter(Q26 == 1)

#vaccine_effective_counts = filter(vaccine_effective_counts, Q26 == 1)
```

```{r}
#finding percent of people who think vaccines are effective and safe, respectively
percent_effective = inner_join(country_counts, vaccine_effective_counts, by = join_by(country_name == country_name))

#joining effective counts with safe counts
percent_effective_and_safe = full_join(percent_effective, vaccine_safe_counts, by = join_by(country_name == country_name))

#calculating percent of people who think vaccines are safe
percent_effective_and_safe$perc_safe = percent_effective_and_safe$total_safe/percent_effective_and_safe$total_surveyed * 100

#calculating percent of people who think vaccines are effective
percent_effective_and_safe$perc_effective = percent_effective_and_safe$total_effective/percent_effective_and_safe$total_surveyed * 100

#rounding to 2 decimal places for cleanliness
percent_effective_and_safe = percent_effective_and_safe %>% 
  mutate(perc_safe = round(perc_safe, 2), perc_effective = round(perc_effective, 2))

```

```{r}
plot_ly(data = percent_effective_and_safe, x = ~perc_safe, y = ~perc_effective,
    type = "scatter", mode = "markers", text = ~country_name, color = ~map_region) %>%
  layout(plot_bgcolor='white',
    xaxis = list(ticksuffix = "%", range = list(0, 100), title = "Believe Vaccines are Safe"),
    yaxis = list(ticksuffix="%", range = list(0, 100), title = ""),
    title = "Belief in Vaccine Effectiveness Versus Belief in Vaccine Safety in Different Countries")
```

